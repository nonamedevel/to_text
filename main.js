/*
    Calling this extends the Number prototype.
    Alternatively, we can export/import the converting function
    and extend the Number prototype in this file
*/
require('./convert.js')

const testCases = [
    [0, 'ноль'],
    [1, 'один'],
    [2, 'два'],
    [3, 'три'],
    [4, 'четыре'],
    [5, 'пять'],
    [9, 'девять'],
    [10, 'десять'],
    [11, 'одиннадцать'],
    [14, 'четырнадцать'],
    [15, 'пятнадцать'],
    [19, 'девятнадцать'],
    [20, 'двадцать'],
    [21, 'двадцать один'],
    [22, 'двадцать два'],
    [25, 'двадцать пять'],
    [30, 'тридцать'],
    [40, 'сорок'],
    [50, 'пятьдесят'],
    [99, 'девяносто девять'],
    [100, 'сто'],
    [101, 'сто один'],
    [110, 'сто десять'],
    [111, 'сто одиннадцать'],
    [119, 'сто девятнадцать'],
    [120, 'сто двадцать'],
    [121, 'сто двадцать один'],
    [199, 'сто девяносто девять'],
    [200, 'двести'],
    [300, 'триста'],
    [400, 'четыреста'],
    [500, 'пятьсот'],
    [700, 'семьсот'],
    [999, 'девятьсот девяносто девять'],
    [1_000, 'одна тысяча'],
    [1_001, 'одна тысяча один'],
    [1_002, 'одна тысяча два'],
    [1_010, 'одна тысяча десять'],
    [1_011, 'одна тысяча одиннадцать'],
    [1_014, 'одна тысяча четырнадцать'],
    [1_020, 'одна тысяча двадцать'],
    [2_000, 'две тысячи'],
    [
        2_911,
        'две тысячи ' +
        'девятьсот одиннадцать'
    ],
    [4_000, 'четыре тысячи'],
    [5_000, 'пять тысяч'],
    [9_999, 'девять тысяч девятьсот девяносто девять'],
    [10_000, 'десять тысяч'],
    [10_001, 'десять тысяч один'],
    [11_000, 'одиннадцать тысяч'],
    [12_000, 'двенадцать тысяч'],
    // [20_000, 'привет'], // testing test
    [21_000, 'двадцать одна тысяча'],
    [25_000, 'двадцать пять тысяч'],
    [
        83_614, 
        'восемьдесят три тысячи ' + 
        'шестьсот четырнадцать'
    ],
    [100_000, 'сто тысяч'],
    [100_001, 'сто тысяч один'],
    [101_000, 'сто одна тысяча'],
    [110_800, 'сто десять тысяч восемьсот'],
    [111_000, 'сто одиннадцать тысяч'],
    [200_000, 'двести тысяч'],
    [1_000_000, 'один миллион'],
    [1_000_001, 'один миллион один'],
    [2_000_000, 'два миллиона'],
    [5_000_005, 'пять миллионов пять'],
    [
        12_345_678, 
        'двенадцать миллионов ' + 
        'триста сорок пять тысяч ' + 
        'шестьсот семьдесят восемь'
    ],
    [100_000_000, 'сто миллионов'],
    [
        123_456_789,
        'сто двадцать три миллиона ' +
        'четыреста пятьдесят шесть тысяч ' +
        'семьсот восемьдесят девять'
    ],
    [
        999_999_999, 
        'девятьсот девяносто девять миллионов ' + 
        'девятьсот девяносто девять тысяч ' + 
        'девятьсот девяносто девять'
    ],
    [1_000_000_000, 'один миллиард'],
    [
        1_520_000_000, 
        'один миллиард ' + 
        'пятьсот двадцать миллионов'
    ],
    [2_000_000_000, 'два миллиарда'],
    [
        7_199_254_740_991,
        'семь триллионов ' +
        'сто девяносто девять миллиардов ' +
        'двести пятьдесят четыре миллиона ' +
        'семьсот сорок тысяч ' +
        'девятьсот девяносто один'
    ],
    [
        999_999_999_999_999,
        'девятьсот девяносто девять триллионов ' +
        'девятьсот девяносто девять миллиардов ' +
        'девятьсот девяносто девять миллионов ' +
        'девятьсот девяносто девять тысяч ' +
        'девятьсот девяносто девять'
    ],
]

function testWithoutUnit() {
    for (const testCase of testCases) {
        const str1 = testCase[0].toText()
        const str2 = testCase[1]
        if (str1 !== str2) {
            console.log('\nExpected:')
            console.log(str2)
            console.log('Got:')
            console.log(str1)
            return
        }
    }
    console.log('*** PASS ***')
}

function testWithUnit() {
    function test(str1, str2) {
        if (str1 !== str2) {
            console.log('\nExpected:')
            console.log(str2)
            console.log('Got:')
            console.log(str1)
        }
    }

    // он
    test((0).toText(['рубль', 'рубля', 'рублей']), 'ноль рублей')
    test((1001001).toText(['рубль', 'рубля', 'рублей']), 'один миллион одна тысяча один рубль')
    test((1001003).toText(['рубль', 'рубля', 'рублей']), 'один миллион одна тысяча три рубля')
    test((1001005).toText(['рубль', 'рубля', 'рублей']), 'один миллион одна тысяча пять рублей')

    // она
    test((0).toText(['машина', 'машины', 'машин']), 'ноль машин')
    test((1001001).toText(['машина', 'машины', 'машин']), 'один миллион одна тысяча одна машина')
    test((1001003).toText(['машина', 'машины', 'машин']), 'один миллион одна тысяча три машины')
    test((1001005).toText(['машина', 'машины', 'машин']), 'один миллион одна тысяча пять машин')

    // оно
    test((0).toText(['яблоко', 'яблока', 'яблок']), 'ноль яблок')
    test((1001001).toText(['яблоко', 'яблока', 'яблок']), 'один миллион одна тысяча одно яблоко')
    test((1001003).toText(['яблоко', 'яблока', 'яблок']), 'один миллион одна тысяча три яблока')
    test((1001005).toText(['яблоко', 'яблока', 'яблок']), 'один миллион одна тысяча пять яблок')
}

// console.log((42).toText())
// console.log((1e6).toText())
// console.log((1.5e6).toText())
// console.log((0).toText())
// console.log((-5).toText())
// console.log((3.14).toText())
// console.log((Infinity).toText())
// console.log((9007199254740992).toText())

testWithUnit()
testWithoutUnit()

// console.log((123_456_789).toText())
